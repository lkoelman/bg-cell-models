/**
 * Initialization code for Mahon MSN model for use in network simulations.
 *
 * @author      Lucas Koelman
 * @date        14/08/2018
 */

load_file("stdlib.hoc")
load_file("stdrun.hoc")


begintemplate FujitaGPE

// Declare public member variables & functions of class template
public soma
create soma[1] // NEURON error if not created here, before init()

// Named Sectionlists to conform to cell prototype required by BluePyOpt.Ephys
// NOTE: objref are public by default
// NOTE: 'this' is reserved and refers to object itself
objref all, somatic, basal, apical, axonal, myelinated

proc init() {
    create soma[1]

    // Initialize sectionlists, even though some will be empty
    all = new SectionList()
    somatic = new SectionList()
    basal = new SectionList()
    apical = new SectionList()
    axonal = new SectionList()
    myelinated = new SectionList()

    geom()
    biophys()
    setparams_fujita_2011()

    soma[0] {
        all.append()
        somatic.append()
    }
}

// /**
//  * Destructor. Destroys circular reference to 'this' so that
//  * it will be garbage collected.
//  */
// proc destroy() {localobj nil
//     // Add 'objref this' at beginning of template and
//     // set CellRef = this in last line of init() procedure
//     CellRef = nil
// }

proc setparams_fujita_2011() {
    gNaF = 0.050
    gNaP = 0.0001
    gKv2 = 0.0001
    gKv3 = 0.010
    gKv4f = 0.002
    gKv4s = 0.001
    gKCNQ = 0.0002
    gCaH = 0.0003
    gHCN = 0.0001
    gSK = 0.0004
    gleak = 0.000068

    soma[0] {
        gmax_NaF = gNaF
        gmax_NaP = gNaP
        gmax_Kv2 = gKv2
        gmax_Kv3 = gKv3
        gmax_Kv4f = gKv4f
        gmax_Kv4s = gKv4s
        gmax_KCNQ = gKCNQ
        gmax_CaH = gCaH
        gmax_HCN = gHCN
        gmax_SK = gSK
        gmax_leak = gleak
    }
}


proc setparams_corbit_2016() {
    // KCNQ current reduced by 25%
    gNaF = 0.050
    gNaP = 0.0001
    gKv2 = 0.0001
    gKv3 = 0.010
    gKv4f = 0.002
    gKv4s = 0.001
    gKCNQ = 0.00015
    gCaH = 0.0003
    gHCN = 0.0001
    gSK = 0.0004
    gleak = 0.000068

    soma[0] {
        gmax_NaF = gNaF
        gmax_NaP = gNaP
        gmax_Kv2 = gKv2
        gmax_Kv3 = gKv3
        gmax_Kv4f = gKv4f
        gmax_Kv4s = gKv4s
        gmax_KCNQ = gKCNQ
        gmax_CaH = gCaH
        gmax_HCN = gHCN
        gmax_SK = gSK
        gmax_leak = gleak
    }
}

proc setparams_arkypallidal() {
    gNaF = 0.050
    gNaP = 0.000025 // reduce persistent Na current
    gKv2 = 0.0001
    gKv3 = 0.010
    gKv4f = 0.002
    gKv4s = 0.001
    gKCNQ = 0.00015 // keep setting Corbit, Whalen (2016)
    gCaH = 0.0003
    gHCN = 0.0001
    gSK = 0.0004
    gleak = 0.000068

    soma[0] {
        gmax_NaF = gNaF
        gmax_NaP = gNaP
        gmax_Kv2 = gKv2
        gmax_Kv3 = gKv3
        gmax_Kv4f = gKv4f
        gmax_Kv4s = gKv4s
        gmax_KCNQ = gKCNQ
        gmax_CaH = gCaH
        gmax_HCN = gHCN
        gmax_SK = gSK
        gmax_leak = gleak
    }
}

proc geom() {
    soma[0] {
        L = 10
        diam = 10
        nseg = 1
    }
}

/**
 * Inserts mechanisms and sets passive parameters.
 * Does _not_ set ionic conductance values: for this call
 * `setparams_<paramset>()`.
 */
proc biophys() {
    soma[0] {
        Ra = 150
        cm = 2.4

        insert leak
        gmax_leak = gleak
        e_leak = -60

        insert NaF
        insert NaP
        ena = 50

        insert Kv2
        insert Kv3
        insert Kv4f
        insert Kv4s
        insert KCNQ
        ek = -90

        insert CaH
        e_CaH = 130

        insert HCN
        e_HCN = -30

        insert SK

        insert Calcium
    }

}

endtemplate FujitaGPE

// Physiological parameters
// celsius = 37         // the value from mahon et al 2000
// v_init = 65  // Fujita demo code


/**
 * Make GPE cell without storing a global reference : you are responsible
 * for keeping a reference to the returned objref.
 *
 * @note    Since there is no additional setup code, you can call
 *          `cell = h.MahonMsn()` from Python instead of using this function.
 */
obfunc make_fujita_gpe_ref() { localobj cell_ref
    cell_ref = new FujitaGPE()
    return cell_ref
}